name: Rust

on:
  push:
    branches: [ "main" ]
  pull_request:
    branches: [ "main" ]

env:
  CARGO_TERM_COLOR: always

jobs:
  build:
    runs-on: ubuntu-latest
    permissions:
      contents: write
    steps:
    - uses: actions-rust-lang/setup-rust-toolchain@v1
    - name: Install Windows toolchain
      run: rustup target add x86_64-pc-windows-gnu
    - name: Install clippy
      run: rustup component add clippy
    - name: Install Mingw-w64 toolchain
      run: sudo apt install binutils-mingw-w64-x86-64 gcc-mingw-w64 nsis
    - uses: actions/checkout@v4
    - name: Run clippy
      run: cargo clippy
    - name: Calendar Version
      id: calendar-version
      run: |
        set -x
        readonly VERSION="$(date +%Y%m%d)-${GITHUB_RUN_NUMBER}"
        echo "Version: $VERSION"
        echo "version=${VERSION}" >> "$GITHUB_OUTPUT"
    - name: Build Binary
      run: cargo build --verbose --target x86_64-pc-windows-gnu -r
    - name: Build installer
      env:
        VERSION: ${{ steps.calendar-version.outputs.version }}
      run: makensis -NOCD -DVERSION=${VERSION} dist/installer.nsis
    - name: Version binary
      env:
        VERSION: ${{ steps.calendar-version.outputs.version }}
      run: cp target/x86_64-pc-windows-gnu/release/uncappy.exe uncappy-${VERSION}.exe
    - name: Version installer
      env:
        VERSION: ${{ steps.calendar-version.outputs.version }}
      run: cp uncappy_installer.exe uncappy-installer-${VERSION}.exe
    - uses: actions/upload-artifact@v4
      with:
        name: uncappy
        path: uncappy-*.exe
    - name: Create draft pre-release
      uses: softprops/action-gh-release@v2
      env:
        GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
      with:
        name: ${{ steps.calendar-version.outputs.version }}
        tag_name: ${{ steps.calendar-version.outputs.version }}
        files: "uncappy-*.exe"
        fail_on_unmatched_files: true
        draft: false
        prerelease: false
